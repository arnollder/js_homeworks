// =============================================================
// 1. Преобразовать строку в массив слов. Напишите функцию
// stringToArray(str), которая преобразует строку в массив слов.
// =============================================================

{const stringToArray = (str) => str.split(' ')
console.log(stringToArray('новый массив'))}

// =============================================================
// 2. Напишите функцию deleteCharacters(str, length), которая
// возвращает подстроку, состоящую из указанного количества
// символов.
// =============================================================



// =============================================================
// 3. Напишите функцию insertDash(str), которая принимает строку
// str в качестве аргумента и вставляет тире (-) между словами.
// При этом все символы строки необходимо перевести в
// верхний регистр.
// =============================================================
// 4. Напишите функцию, которая принимает строку в качестве
// аргумента и преобразует регистр первого символа строки из
// нижнего регистра в верхний.
// =============================================================
// =============================================================
// 5. Напишите функцию capitalize(str), которая возвращает строку,
// в которой каждое слово начинается с заглавной буквы.
// =============================================================

// =============================================================
// 6. Напишите функцию changeRegister(str), которая принимает в
// качестве аргумента строку и и заменяет регистр каждого
// символа на противоположный. Например, если вводится
// «КаЖдЫй ОхОтНиК», то на выходе должно быть «кАжДыЙ
// оХоТнИк».
// =============================================================

// =============================================================
// 7. Напишите функцию removeChar(str), которая возвращает
// строку, очищенную от всех не буквенно-цифровых символов.
// =============================================================

// =============================================================
// 8. Напишите функцию zeros(num, len), которая дополняет нулями
// до указанной длины числовое значение с дополнительным
// знаком «+» или «-» в зависимости от передаваемого
// аргумента.
// =============================================================

// =============================================================
// 9. Напишите функцию comparison(str1, str2), которая сравнивает
// строки без учёта регистра символов.
// =============================================================

// =============================================================
// 10. Напишите функцию insensitiveSearch(str1, str2), которая
// осуществляет поиск подстроки str2 в строке str1 без учёта
// регистра символов.
// =============================================================

// =============================================================
// 11. Напишите функцию initCap(str), которая преобразует стиль
// написания составных слов строки в CamelCase, при котором
// несколько слов пишутся слитно без пробелов, при этом каждое
// слово внутри строки пишется с заглавной буквы.
// =============================================================

// =============================================================
// 12. Напишите функцию initSnake(str), которая преобразует
// стиль написания составных слов строки из CamelCase в
// snake_case, при котором несколько слов разделяются
// символом подчеркивания (_), причём каждое слово пишется с
// маленькой буквы.
// =============================================================

// =============================================================
// 13. Напишите функцию repeatStr(str, n), которая возвращает
// строку повторяемую определённое количество раз.
// 14. Напишите функцию path(pathname), которая возвращает
// имя файла (подстрока после последнего символа "\" ) из
// полного пути к файлу.
// =============================================================

// =============================================================
// 15. Создайте функцию endsWith(), который сравнивает
// подстроку str1 с окончанием исходной строки str и определяет
// заканчивается ли строка символами подстроки.
// =============================================================

// =============================================================
// 16. Напишите функцию getSubstr(str, char, pos), которая
// возвращает часть строки, расположенную после или до
// указанного символа char в зависимости от параметра pos.
// =============================================================

// =============================================================
// 17. Напишите функцию insert(str, substr, pos), которая вставляет
// подстроку substr в указанную позицию pos строки str. По
// умолчанию подстрока вставляется в начало строки.
// =============================================================

// =============================================================
// 18. Напишите функцию limitStr(str, n, symb), которая обрезает
// строку, если она длиннее указанного количества символов n.
// Усеченная строка должна заканчиваться троеточием «...»
// (если не задан параметр symb) или заданным символом symb.
// =============================================================

// =============================================================
// 19. Напишите функцию count(str, stringsearch), которая
// возвращает количество символов stringsearch в строке str.
// =============================================================

// =============================================================
// 20. Напишите функцию strip(str), которая удаляет все лишние
// пробелы из строки str.
// =============================================================

// =============================================================
// 21. Напишите функцию cutString(str, n), которая удаляет лишние
// слова из строки str, оставив в ней n слов.
// =============================================================

// =============================================================
// 22. Напишите функцию findWord(word, str), которая проверяет,
// существует ли в строке str слова word.
// =============================================================
